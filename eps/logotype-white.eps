%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.4 (Build 13E28) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 694 146
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 694 146
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
-128 1238 m
1122 1238 l
1122 -100 l
-128 -100 l
h
-128 1238 m
W*
150.56799 119.104 m
158.048 119.104 l
219.384 30.024 l
219.65601 30.024 l
219.65601 119.104 l
225.64 119.104 l
225.64 22 l
218.56799 22 l
156.82401 111.76 l
156.552 111.76 l
156.552 22 l
150.56799 22 l
150.56799 119.104 l
h
243.864 56.271999 m
243.864 55.456001 l
243.864 51.37598 244.40799 47.477352 245.496 43.759998 c
246.584 40.042648 248.19333 36.778679 250.32401 33.967999 c
252.45468 31.15732 255.12932 28.936008 258.34799 27.304001 c
261.56668 25.671991 265.30664 24.856001 269.56799 24.856001 c
276.54938 24.856001 282.07999 26.691982 286.16 30.364 c
290.24002 34.036018 293.05066 39.135967 294.59201 45.664001 c
299.76001 45.664001 l
298.21866 37.50396 294.88669 31.248022 289.76401 26.896 c
284.6413 22.543978 277.86404 20.368 269.43201 20.368 c
264.26398 20.368 259.75336 21.297323 255.89999 23.156 c
252.04665 25.014675 248.82802 27.553318 246.244 30.771999 c
243.65999 33.990685 241.73334 37.798645 240.464 42.195999 c
239.19466 46.593357 238.56 51.330643 238.56 56.408001 c
238.56 61.304024 239.21733 65.995979 240.532 70.484001 c
241.84668 74.972023 243.81865 78.915985 246.448 82.316002 c
249.07735 85.716019 252.36398 88.435989 256.30801 90.475998 c
260.25201 92.516006 264.89865 93.536003 270.24799 93.536003 c
275.14401 93.536003 279.47333 92.629341 283.23599 90.816002 c
286.99869 89.002655 290.14932 86.532013 292.68799 83.403999 c
295.22668 80.275986 297.15332 76.649353 298.46799 72.524002 c
299.78268 68.398643 300.44 63.978691 300.44 59.264 c
300.44 58.810665 300.41733 58.289337 300.37201 57.700001 c
300.32666 57.110664 300.30399 56.63467 300.30399 56.271999 c
243.864 56.271999 l
h
295.13599 60.759998 m
294.95465 64.568016 294.32001 68.171982 293.23199 71.571999 c
292.14398 74.972015 290.53467 77.963989 288.40399 80.547997 c
286.27332 83.132011 283.68936 85.194656 280.65201 86.736 c
277.61465 88.277344 274.1467 89.047997 270.24799 89.047997 c
266.0773 89.047997 262.40533 88.254677 259.23199 86.667999 c
256.05865 85.081322 253.38402 82.99601 251.20799 80.412003 c
249.03198 77.827988 247.35468 74.813347 246.17599 71.367996 c
244.99733 67.922653 244.272 64.386688 244 60.759998 c
295.13599 60.759998 l
h
367.76001 22 m
362.59201 22 l
362.59201 36.959999 l
362.32001 36.959999 l
361.41333 34.330654 360.12134 31.99601 358.444 29.955999 c
356.76666 27.915989 354.81735 26.170673 352.59601 24.719999 c
350.37466 23.269325 347.94934 22.181337 345.32001 21.455999 c
342.69064 20.730663 340.01602 20.368 337.29599 20.368 c
333.21597 20.368 329.74802 20.866661 326.892 21.864 c
324.03598 22.861338 321.70135 24.175991 319.888 25.808001 c
318.07465 27.440008 316.64667 29.27599 315.604 31.316 c
314.56134 33.35601 313.81332 35.418655 313.35999 37.504002 c
312.90668 39.589344 312.63467 41.606655 312.54401 43.556 c
312.45334 45.505344 312.40799 47.205326 312.40799 48.655998 c
312.40799 91.903999 l
317.57599 91.903999 l
317.57599 47.703999 l
317.57599 45.890659 317.71201 43.692013 317.98401 41.108002 c
318.25601 38.523987 319.04932 36.030678 320.36401 33.627998 c
321.67868 31.225321 323.65067 29.162676 326.28 27.440001 c
328.90933 25.717325 332.62665 24.856001 337.43201 24.856001 c
341.33069 24.856001 344.84399 25.581326 347.97198 27.032 c
351.10001 28.482674 353.75198 30.499987 355.92801 33.084 c
358.104 35.668015 359.75867 38.750648 360.892 42.332001 c
362.02533 45.913353 362.59201 49.834644 362.59201 54.096001 c
362.59201 91.903999 l
367.76001 91.903999 l
367.76001 22 l
h
388.16 76.400002 m
388.56799 76.400002 l
389.20267 78.666679 390.35867 80.797325 392.03601 82.792 c
393.71335 84.786674 395.75333 86.509323 398.15601 87.959999 c
400.55869 89.410675 403.23331 90.521332 406.17999 91.292 c
409.12668 92.062668 412.18665 92.402664 415.35999 92.311996 c
415.35999 87.143997 l
412.63998 87.506668 409.5347 87.234673 406.04401 86.328003 c
402.55331 85.421326 399.22134 83.426682 396.048 80.344002 c
394.77866 78.983994 393.668 77.669342 392.716 76.400002 c
391.76401 75.130661 390.97067 73.725342 390.336 72.183998 c
389.70132 70.642662 389.20267 68.920006 388.84 67.015999 c
388.47733 65.111992 388.25067 62.845348 388.16 60.216 c
388.16 22 l
382.992 22 l
382.992 91.903999 l
388.16 91.903999 l
388.16 76.400002 l
h
415.90399 56.952 m
415.90399 61.93869 416.60666 66.630646 418.01199 71.028 c
419.41733 75.425354 421.47998 79.301315 424.20001 82.655998 c
426.92001 86.010681 430.27466 88.662659 434.26401 90.612 c
438.25336 92.56134 442.83197 93.536003 448 93.536003 c
453.16803 93.536003 457.74664 92.56134 461.73599 90.612 c
465.72534 88.662659 469.07999 86.010681 471.79999 82.655998 c
474.52002 79.301315 476.58267 75.425354 477.98801 71.028 c
479.39334 66.630646 480.09601 61.93869 480.09601 56.952 c
480.09601 51.965309 479.39334 47.25069 477.98801 42.807999 c
476.58267 38.365311 474.52002 34.489349 471.79999 31.18 c
469.07999 27.870649 465.72534 25.241343 461.73599 23.292 c
457.74664 21.342657 453.16803 20.368 448 20.368 c
442.83197 20.368 438.25336 21.342657 434.26401 23.292 c
430.27466 25.241343 426.92001 27.870649 424.20001 31.18 c
421.47998 34.489349 419.41733 38.365311 418.01199 42.807999 c
416.60666 47.25069 415.90399 51.965309 415.90399 56.952 c
h
421.07199 56.952 m
421.07199 52.781311 421.66132 48.769352 422.84 44.916 c
424.01868 41.062649 425.74133 37.640015 428.008 34.647999 c
430.27469 31.655985 433.08533 29.276009 436.44 27.507999 c
439.79468 25.73999 443.64798 24.856001 448 24.856001 c
452.35202 24.856001 456.20532 25.73999 459.56 27.507999 c
462.91467 29.276009 465.72531 31.655985 467.992 34.647999 c
470.25867 37.640015 471.98132 41.062649 473.16 44.916 c
474.33868 48.769352 474.92801 52.781311 474.92801 56.952 c
474.92801 61.122688 474.33868 65.134651 473.16 68.987999 c
471.98132 72.841354 470.25867 76.263985 467.992 79.255997 c
465.72531 82.248016 462.91467 84.627991 459.56 86.396004 c
456.20532 88.164009 452.35202 89.047997 448 89.047997 c
443.64798 89.047997 439.79468 88.164009 436.44 86.396004 c
433.08533 84.627991 430.27469 82.248016 428.008 79.255997 c
425.74133 76.263985 424.01868 72.841354 422.84 68.987999 c
421.66132 65.134651 421.07199 61.122688 421.07199 56.952 c
h
493.42401 119.104 m
498.59201 119.104 l
498.59201 77.080002 l
498.86401 77.080002 l
499.86133 79.800011 501.26666 82.179993 503.07999 84.220001 c
504.89334 86.26001 506.97867 87.982658 509.336 89.388 c
511.69336 90.793343 514.23199 91.835999 516.95203 92.515999 c
519.672 93.196007 522.48267 93.536003 525.38397 93.536003 c
530.552 93.536003 535.01733 92.629341 538.78003 90.816002 c
542.54266 89.002655 545.6933 86.509346 548.23199 83.335999 c
550.77069 80.162651 552.65198 76.468018 553.87598 72.251999 c
555.10004 68.03598 555.71198 63.480026 555.71198 58.584 c
555.71198 50.242626 554.57867 43.556026 552.31201 38.523998 c
550.04535 33.491974 547.32538 29.63868 544.15198 26.964001 c
540.97864 24.28932 537.66937 22.521338 534.224 21.66 c
530.77863 20.798662 527.83203 20.368 525.38397 20.368 c
520.75995 20.368 516.83868 21.093327 513.62 22.544001 c
510.40131 23.994675 507.74933 25.694656 505.664 27.643999 c
503.57864 29.593344 501.992 31.519991 500.90399 33.424 c
499.81601 35.328011 499.13599 36.73333 498.86401 37.639999 c
498.59201 37.639999 l
498.59201 22 l
493.42401 22 l
493.42401 119.104 l
h
525.38397 24.856001 m
530.008 24.856001 533.90668 25.853323 537.08002 27.848 c
540.25336 29.842676 542.83734 32.449318 544.83197 35.667999 c
546.82666 38.886684 548.27734 42.513313 549.18402 46.548 c
550.0907 50.582687 550.54401 54.594646 550.54401 58.584 c
550.54401 62.482685 550.02264 66.245316 548.97998 69.872002 c
547.93732 73.498688 546.35065 76.739983 544.21997 79.596001 c
542.08929 82.452011 539.46002 84.741325 536.33197 86.463997 c
533.20398 88.186676 529.55469 89.047997 525.38397 89.047997 c
520.85065 89.047997 516.90668 88.277344 513.552 86.736 c
510.19733 85.194656 507.43201 83.064011 505.25601 80.344002 c
503.07999 77.623985 501.448 74.40535 500.35999 70.688004 c
499.272 66.97065 498.728 62.93602 498.728 58.584 c
498.728 54.322647 499.22665 50.15202 500.224 46.071999 c
501.22134 41.991982 502.78531 38.388016 504.91599 35.259998 c
507.04669 32.131985 509.78931 29.616009 513.14398 27.712 c
516.49866 25.807991 520.57861 24.856001 525.38397 24.856001 c
h
564.552 56.952 m
564.552 61.93869 565.25464 66.630646 566.65997 71.028 c
568.06537 75.425354 570.12799 79.301315 572.84802 82.655998 c
575.56799 86.010681 578.92267 88.662659 582.91199 90.612 c
586.90137 92.56134 591.47998 93.536003 596.64801 93.536003 c
601.81604 93.536003 606.39465 92.56134 610.38397 90.612 c
614.37335 88.662659 617.72797 86.010681 620.448 82.655998 c
623.16803 79.301315 625.23065 75.425354 626.63599 71.028 c
628.04132 66.630646 628.74402 61.93869 628.74402 56.952 c
628.74402 51.965309 628.04132 47.25069 626.63599 42.807999 c
625.23065 38.365311 623.16803 34.489349 620.448 31.18 c
617.72797 27.870649 614.37335 25.241343 610.38397 23.292 c
606.39465 21.342657 601.81604 20.368 596.64801 20.368 c
591.47998 20.368 586.90137 21.342657 582.91199 23.292 c
578.92267 25.241343 575.56799 27.870649 572.84802 31.18 c
570.12799 34.489349 568.06537 38.365311 566.65997 42.807999 c
565.25464 47.25069 564.552 51.965309 564.552 56.952 c
h
569.71997 56.952 m
569.71997 52.781311 570.30933 48.769352 571.48798 44.916 c
572.66669 41.062649 574.38934 37.640015 576.65601 34.647999 c
578.92267 31.655985 581.73334 29.276009 585.08801 27.507999 c
588.44269 25.73999 592.29596 24.856001 596.64801 24.856001 c
601 24.856001 604.85333 25.73999 608.20801 27.507999 c
611.56268 29.276009 614.37335 31.655985 616.64001 34.647999 c
618.90668 37.640015 620.62933 41.062649 621.80798 44.916 c
622.98669 48.769352 623.57599 52.781311 623.57599 56.952 c
623.57599 61.122688 622.98669 65.134651 621.80798 68.987999 c
620.62933 72.841354 618.90668 76.263985 616.64001 79.255997 c
614.37335 82.248016 611.56268 84.627991 608.20801 86.396004 c
604.85333 88.164009 601 89.047997 596.64801 89.047997 c
592.29596 89.047997 588.44269 88.164009 585.08801 86.396004 c
581.73334 84.627991 578.92267 82.248016 576.65601 79.255997 c
574.38934 76.263985 572.66669 72.841354 571.48798 68.987999 c
570.30933 65.134651 569.71997 61.122688 569.71997 56.952 c
h
658.25598 58.720001 m
632.68799 91.903999 l
639.896 91.903999 l
661.79199 62.664001 l
683.82397 91.903999 l
690.48798 91.903999 l
665.19202 58.720001 l
692.79999 22 l
685.72803 22 l
661.79199 54.776001 l
637.31201 22 l
630.784 22 l
658.25598 58.720001 l
h
658.25598 58.720001 m
W*
0 0 694 146 rc
140.56799 129.104 m
702.79999 129.104 l
702.79999 10.368 l
140.56799 10.368 l
h
140.56799 129.104 m
f*
Q
q
-128 1238 m
1122 1238 l
1122 -100 l
-128 -100 l
h
-128 1238 m
W*
102 45 m
54.311974 0.17325619 l
54.311974 44.050091 l
78.828362 67.708206 l
102 45 l
h
49.790237 0.12137388 m
2 45 l
2 90.002922 l
49.790237 43.880081 l
49.790237 0.12137388 l
h
52 146 m
102.25365 96.676498 l
51.966309 48.092743 l
1.7125766 96.644073 l
52 146 l
h
52 146 m
W*
0 0 694 146 rc
-8.2874231 156 m
112.25365 156 l
112.25365 -9.8786259 l
-8.2874231 -9.8786259 l
h
-8.2874231 156 m
f*
ep
end
%%Trailer
%%EOF
